Starting with channel 'mychannel' and CLI timeout of '10' seconds and CLI delay of '3' seconds
Continue? [Y/n] proceeding ...
Creating volume "net_peer0.org3.example.com" with default driver
Creating volume "net_peer1.org3.example.com" with default driver
Found orphan containers (cli, peer1.org2.example.com, peer0.org2.example.com, peer1.org1.example.com, orderer.example.com, peer0.org1.example.com) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up.
Creating peer0.org3.example.com ... 
Creating peer1.org3.example.com ... 
Creating peer0.org3.example.com
Creating peer1.org3.example.com
[1A[2KCreating peer0.org3.example.com ... [32mdone[0m[1B[1A[2KCreating peer1.org3.example.com ... [32mdone[0m[1BCreating Org3cli ... 
Creating Org3cli
[1A[2KCreating Org3cli ... [32mdone[0m[1B
###############################################################
############### Have Org3 peers join network ##################
###############################################################

========= Getting Org3 on to your first network ========= 

+ peer channel fetch 0 mychannel.block -o orderer.example.com:7050 -c mychannel --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
Fetching channel config block from orderer...
+ res=0
+ set +x
[34m2018-11-14 10:00:57.935 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2018-11-14 10:00:57.936 UTC [cli/common] readBlock -> INFO 002[0m Received block: 0
+ peer channel join -b mychannel.block
+ res=0
+ set +x
[34m2018-11-14 10:00:58.011 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2018-11-14 10:00:58.134 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
===================== peer0.org3 joined channel 'mychannel' ===================== 
+ peer channel join -b mychannel.block
+ res=0
+ set +x
[34m2018-11-14 10:00:58.199 UTC [channelCmd] InitCmdFactory -> INFO 001[0m Endorser and orderer connections initialized
[34m2018-11-14 10:00:58.313 UTC [channelCmd] executeJoin -> INFO 002[0m Successfully submitted proposal to join channel
===================== peer1.org3 joined channel 'mychannel' ===================== 
Installing chaincode 2.0 on peer0.org3...
+ peer chaincode install -n mycc -v 2.0 -l golang -p github.com/chaincode/chaincode_example02/go/
+ res=0
+ set +x
[34m2018-11-14 10:00:58.382 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001[0m Using default escc
[34m2018-11-14 10:00:58.382 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002[0m Using default vscc
[34m2018-11-14 10:00:58.543 UTC [chaincodeCmd] install -> INFO 003[0m Installed remotely response:<status:200 payload:"OK" > 
===================== Chaincode is installed on peer0.org3 ===================== 


========= Org3 is now halfway onto your first network ========= 


###############################################################
##### Upgrade chaincode to have Org3 peers on the network #####
###############################################################

========= Finish adding Org3 to your first network ========= 

===================== Installing chaincode 2.0 on peer0.org1 ===================== 
+ peer chaincode install -n mycc -v 2.0 -l golang -p github.com/chaincode/chaincode_example02/go/
+ res=0
+ set +x
[34m2018-11-14 10:00:58.798 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001[0m Using default escc
[34m2018-11-14 10:00:58.798 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002[0m Using default vscc
[34m2018-11-14 10:00:59.162 UTC [chaincodeCmd] install -> INFO 003[0m Installed remotely response:<status:200 payload:"OK" > 
===================== Chaincode is installed on peer0.org1 ===================== 

===================== Installing chaincode 2.0 on peer0.org2 ===================== 
+ peer chaincode install -n mycc -v 2.0 -l golang -p github.com/chaincode/chaincode_example02/go/
+ res=0
+ set +x
[34m2018-11-14 10:00:59.246 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001[0m Using default escc
[34m2018-11-14 10:00:59.246 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002[0m Using default vscc
[34m2018-11-14 10:00:59.375 UTC [chaincodeCmd] install -> INFO 003[0m Installed remotely response:<status:200 payload:"OK" > 
===================== Chaincode is installed on peer0.org2 ===================== 

===================== Upgrading chaincode on peer0.org1 ===================== 
+ peer chaincode upgrade -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -v 2.0 -c '{"Args":["init","a","90","b","210"]}' -P 'AND ('\''Org1MSP.peer'\'','\''Org2MSP.peer'\'','\''Org3MSP.peer'\'')'
[34m2018-11-14 10:00:59.467 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001[0m Using default escc
[34m2018-11-14 10:00:59.468 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002[0m Using default vscc
+ res=0
+ set +x
[34m2018-11-14 10:00:59.246 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 001[0m Using default escc
[34m2018-11-14 10:00:59.246 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 002[0m Using default vscc
[34m2018-11-14 10:00:59.375 UTC [chaincodeCmd] install -> INFO 003[0m Installed remotely response:<status:200 payload:"OK" > 
===================== Chaincode is upgraded on peer0.org1 on channel 'mychannel' ===================== 


========= Finished adding Org3 to your first network! ========= 


 ____    _____      _      ____    _____ 
/ ___|  |_   _|    / \    |  _ \  |_   _|
\___ \    | |     / _ \   | |_) |   | |  
 ___) |   | |    / ___ \  |  _ <    | |  
|____/    |_|   /_/   \_\ |_| \_\   |_|  

Extend your first network (EYFN) test

Channel name : mychannel
Querying chaincode on peer0.org3...
===================== Querying on peer0.org3 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org3 ...3 secs
+ peer chaincode query -C mychannel -n mycc -c '{"Args":["query","a"]}'
+ res=0
+ set +x

90
===================== Query successful on peer0.org3 on channel 'mychannel' ===================== 
Sending invoke transaction on peer0.org1 peer0.org2 peer0.org3...
+ peer chaincode invoke -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc --peerAddresses peer0.org1.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses peer0.org2.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt --peerAddresses peer0.org3.example.com:7051 --tlsRootCertFiles /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt -c '{"Args":["invoke","a","b","10"]}'
+ res=0
+ set +x
[34m2018-11-14 10:01:57.175 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 001[0m Chaincode invoke successful. result: status:200 
===================== Invoke transaction successful on peer0.org1 peer0.org2 peer0.org3 on channel 'mychannel' ===================== 

Querying chaincode on peer0.org3...
===================== Querying on peer0.org3 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org3 ...3 secs
+ peer chaincode query -C mychannel -n mycc -c '{"Args":["query","a"]}'
+ res=0
+ set +x

80
===================== Query successful on peer0.org3 on channel 'mychannel' ===================== 
Querying chaincode on peer0.org2...
===================== Querying on peer0.org2 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org2 ...3 secs
+ peer chaincode query -C mychannel -n mycc -c '{"Args":["query","a"]}'
+ res=0
+ set +x

80
===================== Query successful on peer0.org2 on channel 'mychannel' ===================== 
Querying chaincode on peer0.org1...
===================== Querying on peer0.org1 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org1 ...3 secs
+ peer chaincode query -C mychannel -n mycc -c '{"Args":["query","a"]}'
+ res=0
+ set +x

80
===================== Query successful on peer0.org1 on channel 'mychannel' ===================== 

========= All GOOD, EYFN test execution completed =========== 


 _____   _   _   ____   
| ____| | \ | | |  _ \  
|  _|   |  \| | | | | | 
| |___  | |\  | | |_| | 
|_____| |_| \_| |____/  

